[{"/Users/macbook/ReactJS Workspace/metrobi/src/App.js":"1","/Users/macbook/ReactJS Workspace/metrobi/src/utils.js":"2","/Users/macbook/ReactJS Workspace/metrobi/src/reportWebVitals.js":"3","/Users/macbook/ReactJS Workspace/metrobi/src/components/AchilleAndTurtoise/index.js":"4","/Users/macbook/ReactJS Workspace/metrobi/src/components/AchilleAndTurtoise/constants.js":"5"},{"size":870,"mtime":1609204237122,"results":"6","hashOfConfig":"7"},{"size":1899,"mtime":1609204765961,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609191326316,"results":"9","hashOfConfig":"7"},{"size":2281,"mtime":1609205305356,"results":"10","hashOfConfig":"7"},{"size":375,"mtime":1609205342517,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1otnakf",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/ReactJS Workspace/metrobi/src/App.js",[],"/Users/macbook/ReactJS Workspace/metrobi/src/utils.js",["23","24","25"],"/Users/macbook/ReactJS Workspace/metrobi/src/reportWebVitals.js",[],"/Users/macbook/ReactJS Workspace/metrobi/src/components/AchilleAndTurtoise/index.js",["26"],"import React, { useState } from 'react'\nimport { competitors } from './constants';\n\nimport './style.css';\n\n\nconst AchilleAndTurtoise = () => {\n\n    const [state, setState] = useState({\n        competitors,\n    });\n\n    const [raceInterval, setRaceInterval] = useState(null);\n\n    const stop = () => {\n        let interval = raceInterval;\n        if (interval != null) {\n            clearInterval(interval);\n            setRaceInterval(null);\n\n            let newCompetitors = [...state.competitors];\n\n            newCompetitors.forEach(competitor => {\n                competitor.distance = competitor.restartDistance;\n                competitor.step = competitor.restartStep\n            });\n\n            setState({\n                ...state,\n                competitors: newCompetitors,\n            })\n\n            return;\n        }\n\n    }\n\n    const begin = () => {\n        if (raceInterval != null) return;\n\n        let interval = raceInterval;\n\n        // We only get here when the race isn't playing\n        interval = setInterval(() => {\n            let newCompetitors = [...state.competitors];\n\n            newCompetitors.map(competitor => {\n                competitor.distance += competitor.step * competitor.speed;\n                competitor.step = competitor.step / .99;\n            });\n\n            setState({\n                ...state,\n                competitors: newCompetitors,\n            })\n\n        }, 50);\n\n        setRaceInterval(interval)\n    }\n\n    return (\n        <div>\n            <button className=\"begin_stop_button\" onClick={begin}>Begin</button>\n            <button className=\"begin_stop_button\" onClick={stop}>Stop</button>\n\n            <div className=\"race\">\n                <div className=\"line\"></div>\n\n                {competitors.map((competitor, index) => (\n                    <div key={index}>\n                        <div style={{ left: competitor.distance + '%', backgroundColor: competitor.color }} className=\"competitor\">\n                            <span className='competitor_name'>{competitor.name}</span>\n                        </div>\n                        \n                        <div className=\"line\"></div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default AchilleAndTurtoise\n","/Users/macbook/ReactJS Workspace/metrobi/src/components/AchilleAndTurtoise/constants.js",[],{"ruleId":"27","severity":1,"message":"28","line":7,"column":31,"nodeType":"29","messageId":"30","endLine":7,"endColumn":33},{"ruleId":"27","severity":1,"message":"28","line":35,"column":43,"nodeType":"29","messageId":"30","endLine":35,"endColumn":45},{"ruleId":"27","severity":1,"message":"31","line":36,"column":43,"nodeType":"29","messageId":"30","endLine":36,"endColumn":45},{"ruleId":"32","severity":1,"message":"33","line":47,"column":43,"nodeType":"34","messageId":"35","endLine":47,"endColumn":45},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]